/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from "axios";
import { Configuration } from "../configuration";
import { RequestArgs, BaseAPI } from "../base";
import { CreateBusinessWireAccountResponse } from "../models";
import { GetBusinessWireAccountInstructionsResponse } from "../models";
import { GetBusinessWireAccountResponse } from "../models";
import { ListBusinessWireAccountsResponse } from "../models";
import { WireCreationRequest } from "../models";
/**
 * WiresApi - axios parameter creator
 * @export
 */
export declare const WiresApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Create a Wire bank account
     * @param {WireCreationRequest} [wireCreationRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createBusinessWireAccount: (wireCreationRequest?: WireCreationRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get a Wire bank account
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBusinessWireAccount: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get the wire transfer instructions into the Circle bank account given your bank account id.
     * @summary Get Wire instructions
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {'USD' | 'EUR'} [currency] Queries beneficiary bank account currency. Default is USD.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBusinessWireAccountInstructions: (id: string, currency?: "USD" | "EUR", options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary List all Wire bank accounts
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBusinessWireAccounts: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * WiresApi - functional programming interface
 * @export
 */
export declare const WiresApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Create a Wire bank account
     * @param {WireCreationRequest} [wireCreationRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createBusinessWireAccount(wireCreationRequest?: WireCreationRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateBusinessWireAccountResponse>>;
    /**
     *
     * @summary Get a Wire bank account
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBusinessWireAccount(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetBusinessWireAccountResponse>>;
    /**
     * Get the wire transfer instructions into the Circle bank account given your bank account id.
     * @summary Get Wire instructions
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {'USD' | 'EUR'} [currency] Queries beneficiary bank account currency. Default is USD.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBusinessWireAccountInstructions(id: string, currency?: "USD" | "EUR", options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetBusinessWireAccountInstructionsResponse>>;
    /**
     *
     * @summary List all Wire bank accounts
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBusinessWireAccounts(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListBusinessWireAccountsResponse>>;
};
/**
 * WiresApi - factory interface
 * @export
 */
export declare const WiresApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Create a Wire bank account
     * @param {WireCreationRequest} [wireCreationRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createBusinessWireAccount(wireCreationRequest?: WireCreationRequest, options?: any): AxiosPromise<CreateBusinessWireAccountResponse>;
    /**
     *
     * @summary Get a Wire bank account
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBusinessWireAccount(id: string, options?: any): AxiosPromise<GetBusinessWireAccountResponse>;
    /**
     * Get the wire transfer instructions into the Circle bank account given your bank account id.
     * @summary Get Wire instructions
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {'USD' | 'EUR'} [currency] Queries beneficiary bank account currency. Default is USD.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBusinessWireAccountInstructions(id: string, currency?: "USD" | "EUR", options?: any): AxiosPromise<GetBusinessWireAccountInstructionsResponse>;
    /**
     *
     * @summary List all Wire bank accounts
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBusinessWireAccounts(options?: any): AxiosPromise<ListBusinessWireAccountsResponse>;
};
/**
 * WiresApi - object-oriented interface
 * @export
 * @class WiresApi
 * @extends {BaseAPI}
 */
export declare class WiresApi extends BaseAPI {
    /**
     *
     * @summary Create a Wire bank account
     * @param {WireCreationRequest} [wireCreationRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WiresApi
     */
    createBusinessWireAccount(wireCreationRequest?: WireCreationRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CreateBusinessWireAccountResponse, any>>;
    /**
     *
     * @summary Get a Wire bank account
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WiresApi
     */
    getBusinessWireAccount(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBusinessWireAccountResponse, any>>;
    /**
     * Get the wire transfer instructions into the Circle bank account given your bank account id.
     * @summary Get Wire instructions
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {'USD' | 'EUR'} [currency] Queries beneficiary bank account currency. Default is USD.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WiresApi
     */
    getBusinessWireAccountInstructions(id: string, currency?: "USD" | "EUR", options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetBusinessWireAccountInstructionsResponse, any>>;
    /**
     *
     * @summary List all Wire bank accounts
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WiresApi
     */
    listBusinessWireAccounts(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListBusinessWireAccountsResponse, any>>;
}

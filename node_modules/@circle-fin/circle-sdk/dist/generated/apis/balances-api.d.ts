/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from "axios";
import { Configuration } from "../configuration";
import { RequestArgs, BaseAPI } from "../base";
import { ListBalancesResponse } from "../models";
import { ListBusinessBalancesResponse } from "../models";
/**
 * BalancesApi - axios parameter creator
 * @export
 */
export declare const BalancesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Retrieves the balance of merchant funds that have settled and also of funds that have been sent for processing but have not yet settled.
     * @summary List all balances
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBalances: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieves the balance of funds that are available for use.
     * @summary List all balances
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBusinessBalances: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * BalancesApi - functional programming interface
 * @export
 */
export declare const BalancesApiFp: (configuration?: Configuration) => {
    /**
     * Retrieves the balance of merchant funds that have settled and also of funds that have been sent for processing but have not yet settled.
     * @summary List all balances
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBalances(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListBalancesResponse>>;
    /**
     * Retrieves the balance of funds that are available for use.
     * @summary List all balances
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBusinessBalances(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListBusinessBalancesResponse>>;
};
/**
 * BalancesApi - factory interface
 * @export
 */
export declare const BalancesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Retrieves the balance of merchant funds that have settled and also of funds that have been sent for processing but have not yet settled.
     * @summary List all balances
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBalances(options?: any): AxiosPromise<ListBalancesResponse>;
    /**
     * Retrieves the balance of funds that are available for use.
     * @summary List all balances
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listBusinessBalances(options?: any): AxiosPromise<ListBusinessBalancesResponse>;
};
/**
 * BalancesApi - object-oriented interface
 * @export
 * @class BalancesApi
 * @extends {BaseAPI}
 */
export declare class BalancesApi extends BaseAPI {
    /**
     * Retrieves the balance of merchant funds that have settled and also of funds that have been sent for processing but have not yet settled.
     * @summary List all balances
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BalancesApi
     */
    listBalances(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListBalancesResponse, any>>;
    /**
     * Retrieves the balance of funds that are available for use.
     * @summary List all balances
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BalancesApi
     */
    listBusinessBalances(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListBusinessBalancesResponse, any>>;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from "axios";
import { Configuration } from "../configuration";
import { RequestArgs, BaseAPI } from "../base";
import { AddressBookRecipientModifyRequest } from "../models";
import { AddressBookRecipientRequest } from "../models";
import { CreateAddressBookRecipientResponse } from "../models";
import { GetAddressBookRecipientResponse } from "../models";
import { ListAddressBookRecipientsResponse } from "../models";
import { ModifyAddressBookRecipientResponse } from "../models";
/**
 * CryptoAddressBookApi - axios parameter creator
 * @export
 */
export declare const CryptoAddressBookApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Create a recipient
     * @param {AddressBookRecipientRequest} [addressBookRecipientRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAddressBookRecipient: (addressBookRecipientRequest?: AddressBookRecipientRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Delete a recipient
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAddressBookRecipient: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get a recipient
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAddressBookRecipient: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary List all recipients
     * @param {string} [address] Filters results to fetch only address book recipients with the provided address.
     * @param {string} [chain] Filters results to fetch only address book recipients with the provided chain.
     * @param {string} [email] Filters results to fetch only address book recipients that have the provided email in their metadata.
     * @param {'pending' | 'inactive' | 'active' | 'denied'} [status] Filters results to fetch only address book recipients that have the provided status.
     * @param {string} [from] Queries items created since the specified date-time (inclusive).
     * @param {string} [to] Queries items created before the specified date-time (inclusive).
     * @param {string} [pageBefore] A collection ID value used for pagination.  It marks the exclusive end of a page. When provided, the collection resource will return the next &#x60;n&#x60; items before the id, with &#x60;n&#x60; being specified by &#x60;pageSize&#x60;.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither &#x60;pageAfter&#x60; nor &#x60;pageBefore&#x60; are specified.  SHOULD NOT be used in conjuction with pageAfter.
     * @param {string} [pageAfter] A collection ID value used for pagination.  It marks the exclusive begin of a page. When provided, the collection resource will return the next &#x60;n&#x60; items after the id, with &#x60;n&#x60; being specified by &#x60;pageSize&#x60;.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither &#x60;pageAfter&#x60; nor &#x60;pageBefore&#x60; are specified.  SHOULD NOT be used in conjuction with pageBefore.
     * @param {number} [pageSize] Limits the number of items to be returned.  Some collections have a strict upper bound that will disregard this value. In case the specified value is higher than the allowed limit, the collection limit will be used.  If avoided, the collection will determine the page size itself.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAddressBookRecipients: (address?: string, chain?: string, email?: string, status?: "pending" | "inactive" | "active" | "denied", from?: string, to?: string, pageBefore?: string, pageAfter?: string, pageSize?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Modify a recipient
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {AddressBookRecipientModifyRequest} [addressBookRecipientModifyRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    modifyAddressBookRecipient: (id: string, addressBookRecipientModifyRequest?: AddressBookRecipientModifyRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * CryptoAddressBookApi - functional programming interface
 * @export
 */
export declare const CryptoAddressBookApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Create a recipient
     * @param {AddressBookRecipientRequest} [addressBookRecipientRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAddressBookRecipient(addressBookRecipientRequest?: AddressBookRecipientRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateAddressBookRecipientResponse>>;
    /**
     *
     * @summary Delete a recipient
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAddressBookRecipient(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary Get a recipient
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAddressBookRecipient(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetAddressBookRecipientResponse>>;
    /**
     *
     * @summary List all recipients
     * @param {string} [address] Filters results to fetch only address book recipients with the provided address.
     * @param {string} [chain] Filters results to fetch only address book recipients with the provided chain.
     * @param {string} [email] Filters results to fetch only address book recipients that have the provided email in their metadata.
     * @param {'pending' | 'inactive' | 'active' | 'denied'} [status] Filters results to fetch only address book recipients that have the provided status.
     * @param {string} [from] Queries items created since the specified date-time (inclusive).
     * @param {string} [to] Queries items created before the specified date-time (inclusive).
     * @param {string} [pageBefore] A collection ID value used for pagination.  It marks the exclusive end of a page. When provided, the collection resource will return the next &#x60;n&#x60; items before the id, with &#x60;n&#x60; being specified by &#x60;pageSize&#x60;.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither &#x60;pageAfter&#x60; nor &#x60;pageBefore&#x60; are specified.  SHOULD NOT be used in conjuction with pageAfter.
     * @param {string} [pageAfter] A collection ID value used for pagination.  It marks the exclusive begin of a page. When provided, the collection resource will return the next &#x60;n&#x60; items after the id, with &#x60;n&#x60; being specified by &#x60;pageSize&#x60;.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither &#x60;pageAfter&#x60; nor &#x60;pageBefore&#x60; are specified.  SHOULD NOT be used in conjuction with pageBefore.
     * @param {number} [pageSize] Limits the number of items to be returned.  Some collections have a strict upper bound that will disregard this value. In case the specified value is higher than the allowed limit, the collection limit will be used.  If avoided, the collection will determine the page size itself.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAddressBookRecipients(address?: string, chain?: string, email?: string, status?: "pending" | "inactive" | "active" | "denied", from?: string, to?: string, pageBefore?: string, pageAfter?: string, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListAddressBookRecipientsResponse>>;
    /**
     *
     * @summary Modify a recipient
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {AddressBookRecipientModifyRequest} [addressBookRecipientModifyRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    modifyAddressBookRecipient(id: string, addressBookRecipientModifyRequest?: AddressBookRecipientModifyRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModifyAddressBookRecipientResponse>>;
};
/**
 * CryptoAddressBookApi - factory interface
 * @export
 */
export declare const CryptoAddressBookApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Create a recipient
     * @param {AddressBookRecipientRequest} [addressBookRecipientRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAddressBookRecipient(addressBookRecipientRequest?: AddressBookRecipientRequest, options?: any): AxiosPromise<CreateAddressBookRecipientResponse>;
    /**
     *
     * @summary Delete a recipient
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAddressBookRecipient(id: string, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary Get a recipient
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAddressBookRecipient(id: string, options?: any): AxiosPromise<GetAddressBookRecipientResponse>;
    /**
     *
     * @summary List all recipients
     * @param {string} [address] Filters results to fetch only address book recipients with the provided address.
     * @param {string} [chain] Filters results to fetch only address book recipients with the provided chain.
     * @param {string} [email] Filters results to fetch only address book recipients that have the provided email in their metadata.
     * @param {'pending' | 'inactive' | 'active' | 'denied'} [status] Filters results to fetch only address book recipients that have the provided status.
     * @param {string} [from] Queries items created since the specified date-time (inclusive).
     * @param {string} [to] Queries items created before the specified date-time (inclusive).
     * @param {string} [pageBefore] A collection ID value used for pagination.  It marks the exclusive end of a page. When provided, the collection resource will return the next &#x60;n&#x60; items before the id, with &#x60;n&#x60; being specified by &#x60;pageSize&#x60;.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither &#x60;pageAfter&#x60; nor &#x60;pageBefore&#x60; are specified.  SHOULD NOT be used in conjuction with pageAfter.
     * @param {string} [pageAfter] A collection ID value used for pagination.  It marks the exclusive begin of a page. When provided, the collection resource will return the next &#x60;n&#x60; items after the id, with &#x60;n&#x60; being specified by &#x60;pageSize&#x60;.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither &#x60;pageAfter&#x60; nor &#x60;pageBefore&#x60; are specified.  SHOULD NOT be used in conjuction with pageBefore.
     * @param {number} [pageSize] Limits the number of items to be returned.  Some collections have a strict upper bound that will disregard this value. In case the specified value is higher than the allowed limit, the collection limit will be used.  If avoided, the collection will determine the page size itself.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAddressBookRecipients(address?: string, chain?: string, email?: string, status?: "pending" | "inactive" | "active" | "denied", from?: string, to?: string, pageBefore?: string, pageAfter?: string, pageSize?: number, options?: any): AxiosPromise<ListAddressBookRecipientsResponse>;
    /**
     *
     * @summary Modify a recipient
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {AddressBookRecipientModifyRequest} [addressBookRecipientModifyRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    modifyAddressBookRecipient(id: string, addressBookRecipientModifyRequest?: AddressBookRecipientModifyRequest, options?: any): AxiosPromise<ModifyAddressBookRecipientResponse>;
};
/**
 * CryptoAddressBookApi - object-oriented interface
 * @export
 * @class CryptoAddressBookApi
 * @extends {BaseAPI}
 */
export declare class CryptoAddressBookApi extends BaseAPI {
    /**
     *
     * @summary Create a recipient
     * @param {AddressBookRecipientRequest} [addressBookRecipientRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CryptoAddressBookApi
     */
    createAddressBookRecipient(addressBookRecipientRequest?: AddressBookRecipientRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CreateAddressBookRecipientResponse, any>>;
    /**
     *
     * @summary Delete a recipient
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CryptoAddressBookApi
     */
    deleteAddressBookRecipient(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary Get a recipient
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CryptoAddressBookApi
     */
    getAddressBookRecipient(id: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GetAddressBookRecipientResponse, any>>;
    /**
     *
     * @summary List all recipients
     * @param {string} [address] Filters results to fetch only address book recipients with the provided address.
     * @param {string} [chain] Filters results to fetch only address book recipients with the provided chain.
     * @param {string} [email] Filters results to fetch only address book recipients that have the provided email in their metadata.
     * @param {'pending' | 'inactive' | 'active' | 'denied'} [status] Filters results to fetch only address book recipients that have the provided status.
     * @param {string} [from] Queries items created since the specified date-time (inclusive).
     * @param {string} [to] Queries items created before the specified date-time (inclusive).
     * @param {string} [pageBefore] A collection ID value used for pagination.  It marks the exclusive end of a page. When provided, the collection resource will return the next &#x60;n&#x60; items before the id, with &#x60;n&#x60; being specified by &#x60;pageSize&#x60;.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither &#x60;pageAfter&#x60; nor &#x60;pageBefore&#x60; are specified.  SHOULD NOT be used in conjuction with pageAfter.
     * @param {string} [pageAfter] A collection ID value used for pagination.  It marks the exclusive begin of a page. When provided, the collection resource will return the next &#x60;n&#x60; items after the id, with &#x60;n&#x60; being specified by &#x60;pageSize&#x60;.  The items will be returned in the natural order of the collection.  The resource will return the first page if neither &#x60;pageAfter&#x60; nor &#x60;pageBefore&#x60; are specified.  SHOULD NOT be used in conjuction with pageBefore.
     * @param {number} [pageSize] Limits the number of items to be returned.  Some collections have a strict upper bound that will disregard this value. In case the specified value is higher than the allowed limit, the collection limit will be used.  If avoided, the collection will determine the page size itself.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CryptoAddressBookApi
     */
    listAddressBookRecipients(address?: string, chain?: string, email?: string, status?: "pending" | "inactive" | "active" | "denied", from?: string, to?: string, pageBefore?: string, pageAfter?: string, pageSize?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ListAddressBookRecipientsResponse, any>>;
    /**
     *
     * @summary Modify a recipient
     * @param {string} id Universally unique identifier (UUID v4) of a resource.
     * @param {AddressBookRecipientModifyRequest} [addressBookRecipientModifyRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CryptoAddressBookApi
     */
    modifyAddressBookRecipient(id: string, addressBookRecipientModifyRequest?: AddressBookRecipientModifyRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ModifyAddressBookRecipientResponse, any>>;
}

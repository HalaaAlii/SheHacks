/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from "axios";
import { Configuration } from "../configuration";
import { RequestArgs, BaseAPI } from "../base";
import { CreatePaymentTokenResponse } from "../models";
import { PaymentTokenRequest } from "../models";
/**
 * PaymentTokensApi - axios parameter creator
 * @export
 */
export declare const PaymentTokensApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Convert a digital wallet (Apple Pay, Google Pay) token to a single-use payment token.
     * @summary Create a payment token
     * @param {PaymentTokenRequest} [paymentTokenRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createPaymentToken: (paymentTokenRequest?: PaymentTokenRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * PaymentTokensApi - functional programming interface
 * @export
 */
export declare const PaymentTokensApiFp: (configuration?: Configuration) => {
    /**
     * Convert a digital wallet (Apple Pay, Google Pay) token to a single-use payment token.
     * @summary Create a payment token
     * @param {PaymentTokenRequest} [paymentTokenRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createPaymentToken(paymentTokenRequest?: PaymentTokenRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreatePaymentTokenResponse>>;
};
/**
 * PaymentTokensApi - factory interface
 * @export
 */
export declare const PaymentTokensApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Convert a digital wallet (Apple Pay, Google Pay) token to a single-use payment token.
     * @summary Create a payment token
     * @param {PaymentTokenRequest} [paymentTokenRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createPaymentToken(paymentTokenRequest?: PaymentTokenRequest, options?: any): AxiosPromise<CreatePaymentTokenResponse>;
};
/**
 * PaymentTokensApi - object-oriented interface
 * @export
 * @class PaymentTokensApi
 * @extends {BaseAPI}
 */
export declare class PaymentTokensApi extends BaseAPI {
    /**
     * Convert a digital wallet (Apple Pay, Google Pay) token to a single-use payment token.
     * @summary Create a payment token
     * @param {PaymentTokenRequest} [paymentTokenRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PaymentTokensApi
     */
    createPaymentToken(paymentTokenRequest?: PaymentTokenRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<CreatePaymentTokenResponse, any>>;
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { CryptoPaymentsMoney } from "./crypto-payments-money";
import { PaymentIntentFees } from "./payment-intent-fees";
import { PaymentMethodBlockchain } from "./payment-method-blockchain";
import { Timeline } from "./timeline";
/**
 *
 * @export
 * @interface ContinuousPaymentIntent
 */
export interface ContinuousPaymentIntent {
    /**
     * Unique system generated identifier for the entity.
     * @type {string}
     * @memberof ContinuousPaymentIntent
     */
    id?: string;
    /**
     * Desired currency of the payment.
     * @type {string}
     * @memberof ContinuousPaymentIntent
     */
    currency: ContinuousPaymentIntentCurrencyEnum;
    /**
     *
     * @type {CryptoPaymentsMoney}
     * @memberof ContinuousPaymentIntent
     */
    amountPaid?: CryptoPaymentsMoney;
    /**
     *
     * @type {CryptoPaymentsMoney}
     * @memberof ContinuousPaymentIntent
     */
    amountRefunded?: CryptoPaymentsMoney;
    /**
     * Desired currency for the payments to settle in.
     * @type {string}
     * @memberof ContinuousPaymentIntent
     */
    settlementCurrency: ContinuousPaymentIntentSettlementCurrencyEnum;
    /**
     *
     * @type {Array<PaymentMethodBlockchain>}
     * @memberof ContinuousPaymentIntent
     */
    paymentMethods: Array<PaymentMethodBlockchain>;
    /**
     *
     * @type {Array<PaymentIntentFees>}
     * @memberof ContinuousPaymentIntent
     */
    fees?: Array<PaymentIntentFees>;
    /**
     * State management timeline.
     * @type {Array<Timeline>}
     * @memberof ContinuousPaymentIntent
     */
    timeline?: Array<Timeline>;
    /**
     * ISO-8601 UTC date/time format.
     * @type {string}
     * @memberof ContinuousPaymentIntent
     */
    updateDate?: string;
    /**
     * ISO-8601 UTC date/time format.
     * @type {string}
     * @memberof ContinuousPaymentIntent
     */
    createDate?: string;
    /**
     *
     * @type {string}
     * @memberof ContinuousPaymentIntent
     */
    type: ContinuousPaymentIntentTypeEnum;
    /**
     * Unique system generated identifier for the wallet of the merchant.
     * @type {string}
     * @memberof ContinuousPaymentIntent
     */
    merchantWalletId?: string;
}
export declare const ContinuousPaymentIntentCurrencyEnum: {
    readonly Usd: "USD";
    readonly Btc: "BTC";
    readonly Eth: "ETH";
};
export declare type ContinuousPaymentIntentCurrencyEnum = typeof ContinuousPaymentIntentCurrencyEnum[keyof typeof ContinuousPaymentIntentCurrencyEnum];
export declare const ContinuousPaymentIntentSettlementCurrencyEnum: {
    readonly Usd: "USD";
    readonly Btc: "BTC";
    readonly Eth: "ETH";
};
export declare type ContinuousPaymentIntentSettlementCurrencyEnum = typeof ContinuousPaymentIntentSettlementCurrencyEnum[keyof typeof ContinuousPaymentIntentSettlementCurrencyEnum];
export declare const ContinuousPaymentIntentTypeEnum: {
    readonly Continuous: "continuous";
};
export declare type ContinuousPaymentIntentTypeEnum = typeof ContinuousPaymentIntentTypeEnum[keyof typeof ContinuousPaymentIntentTypeEnum];

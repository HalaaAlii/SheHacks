"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListPaymentIntentsResponseDataInnerTypeEnum = exports.ListPaymentIntentsResponseDataInnerCurrencyEnum = exports.ListPaymentIntentsResponseDataInnerSettlementCurrencyEnum = void 0;
exports.ListPaymentIntentsResponseDataInnerSettlementCurrencyEnum = {
    Usd: "USD",
    Btc: "BTC",
    Eth: "ETH"
};
exports.ListPaymentIntentsResponseDataInnerCurrencyEnum = {
    Usd: "USD",
    Btc: "BTC",
    Eth: "ETH"
};
exports.ListPaymentIntentsResponseDataInnerTypeEnum = {
    Continuous: "continuous"
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1wYXltZW50LWludGVudHMtcmVzcG9uc2UtZGF0YS1pbm5lci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9nZW5lcmF0ZWQvbW9kZWxzL2xpc3QtcGF5bWVudC1pbnRlbnRzLXJlc3BvbnNlLWRhdGEtaW5uZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLG9CQUFvQjtBQUNwQixvQkFBb0I7QUFDcEI7Ozs7R0FJRzs7O0FBNkhVLFFBQUEseURBQXlELEdBQUc7SUFDdkUsR0FBRyxFQUFFLEtBQUs7SUFDVixHQUFHLEVBQUUsS0FBSztJQUNWLEdBQUcsRUFBRSxLQUFLO0NBQ0YsQ0FBQztBQUlFLFFBQUEsK0NBQStDLEdBQUc7SUFDN0QsR0FBRyxFQUFFLEtBQUs7SUFDVixHQUFHLEVBQUUsS0FBSztJQUNWLEdBQUcsRUFBRSxLQUFLO0NBQ0YsQ0FBQztBQUlFLFFBQUEsMkNBQTJDLEdBQUc7SUFDekQsVUFBVSxFQUFFLFlBQVk7Q0FDaEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cblxuLy8gTWF5IGNvbnRhaW4gdW51c2VkIGltcG9ydHMgaW4gc29tZSBjYXNlc1xuLy8gQHRzLWlnbm9yZVxuaW1wb3J0IHsgQ29udGludW91c1BheW1lbnRJbnRlbnQgfSBmcm9tIFwiLi9jb250aW51b3VzLXBheW1lbnQtaW50ZW50XCI7XG4vLyBNYXkgY29udGFpbiB1bnVzZWQgaW1wb3J0cyBpbiBzb21lIGNhc2VzXG4vLyBAdHMtaWdub3JlXG5pbXBvcnQgeyBDcnlwdG9QYXltZW50c01vbmV5IH0gZnJvbSBcIi4vY3J5cHRvLXBheW1lbnRzLW1vbmV5XCI7XG4vLyBNYXkgY29udGFpbiB1bnVzZWQgaW1wb3J0cyBpbiBzb21lIGNhc2VzXG4vLyBAdHMtaWdub3JlXG5pbXBvcnQgeyBQYXltZW50SW50ZW50IH0gZnJvbSBcIi4vcGF5bWVudC1pbnRlbnRcIjtcbi8vIE1heSBjb250YWluIHVudXNlZCBpbXBvcnRzIGluIHNvbWUgY2FzZXNcbi8vIEB0cy1pZ25vcmVcbmltcG9ydCB7IFBheW1lbnRJbnRlbnRGZWVzIH0gZnJvbSBcIi4vcGF5bWVudC1pbnRlbnQtZmVlc1wiO1xuLy8gTWF5IGNvbnRhaW4gdW51c2VkIGltcG9ydHMgaW4gc29tZSBjYXNlc1xuLy8gQHRzLWlnbm9yZVxuaW1wb3J0IHsgUGF5bWVudE1ldGhvZEJsb2NrY2hhaW4gfSBmcm9tIFwiLi9wYXltZW50LW1ldGhvZC1ibG9ja2NoYWluXCI7XG4vLyBNYXkgY29udGFpbiB1bnVzZWQgaW1wb3J0cyBpbiBzb21lIGNhc2VzXG4vLyBAdHMtaWdub3JlXG5pbXBvcnQgeyBUaW1lbGluZSB9IGZyb20gXCIuL3RpbWVsaW5lXCI7XG5cbi8qKlxuICpcbiAqIEBleHBvcnRcbiAqIEBpbnRlcmZhY2UgTGlzdFBheW1lbnRJbnRlbnRzUmVzcG9uc2VEYXRhSW5uZXJcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBMaXN0UGF5bWVudEludGVudHNSZXNwb25zZURhdGFJbm5lciB7XG4gIC8qKlxuICAgKiBVbmlxdWUgc3lzdGVtIGdlbmVyYXRlZCBpZGVudGlmaWVyIGZvciB0aGUgZW50aXR5LlxuICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgKiBAbWVtYmVyb2YgTGlzdFBheW1lbnRJbnRlbnRzUmVzcG9uc2VEYXRhSW5uZXJcbiAgICovXG4gIGlkPzogc3RyaW5nO1xuICAvKipcbiAgICpcbiAgICogQHR5cGUge0NyeXB0b1BheW1lbnRzTW9uZXl9XG4gICAqIEBtZW1iZXJvZiBMaXN0UGF5bWVudEludGVudHNSZXNwb25zZURhdGFJbm5lclxuICAgKi9cbiAgYW1vdW50OiBDcnlwdG9QYXltZW50c01vbmV5O1xuICAvKipcbiAgICpcbiAgICogQHR5cGUge0NyeXB0b1BheW1lbnRzTW9uZXl9XG4gICAqIEBtZW1iZXJvZiBMaXN0UGF5bWVudEludGVudHNSZXNwb25zZURhdGFJbm5lclxuICAgKi9cbiAgYW1vdW50UGFpZD86IENyeXB0b1BheW1lbnRzTW9uZXk7XG4gIC8qKlxuICAgKlxuICAgKiBAdHlwZSB7Q3J5cHRvUGF5bWVudHNNb25leX1cbiAgICogQG1lbWJlcm9mIExpc3RQYXltZW50SW50ZW50c1Jlc3BvbnNlRGF0YUlubmVyXG4gICAqL1xuICBhbW91bnRSZWZ1bmRlZD86IENyeXB0b1BheW1lbnRzTW9uZXk7XG4gIC8qKlxuICAgKiBEZXNpcmVkIGN1cnJlbmN5IGZvciB0aGUgcGF5bWVudHMgdG8gc2V0dGxlIGluLlxuICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgKiBAbWVtYmVyb2YgTGlzdFBheW1lbnRJbnRlbnRzUmVzcG9uc2VEYXRhSW5uZXJcbiAgICovXG4gIHNldHRsZW1lbnRDdXJyZW5jeTogTGlzdFBheW1lbnRJbnRlbnRzUmVzcG9uc2VEYXRhSW5uZXJTZXR0bGVtZW50Q3VycmVuY3lFbnVtO1xuICAvKipcbiAgICpcbiAgICogQHR5cGUge0FycmF5PFBheW1lbnRNZXRob2RCbG9ja2NoYWluPn1cbiAgICogQG1lbWJlcm9mIExpc3RQYXltZW50SW50ZW50c1Jlc3BvbnNlRGF0YUlubmVyXG4gICAqL1xuICBwYXltZW50TWV0aG9kczogQXJyYXk8UGF5bWVudE1ldGhvZEJsb2NrY2hhaW4+O1xuICAvKipcbiAgICpcbiAgICogQHR5cGUge0FycmF5PFBheW1lbnRJbnRlbnRGZWVzPn1cbiAgICogQG1lbWJlcm9mIExpc3RQYXltZW50SW50ZW50c1Jlc3BvbnNlRGF0YUlubmVyXG4gICAqL1xuICBmZWVzPzogQXJyYXk8UGF5bWVudEludGVudEZlZXM+O1xuICAvKipcbiAgICogTGlzdCBvZiBhc3NvY2lhdGVkIHBheW1lbnRzLlxuICAgKiBAdHlwZSB7QXJyYXk8c3RyaW5nPn1cbiAgICogQG1lbWJlcm9mIExpc3RQYXltZW50SW50ZW50c1Jlc3BvbnNlRGF0YUlubmVyXG4gICAqL1xuICBwYXltZW50SWRzPzogQXJyYXk8c3RyaW5nPjtcbiAgLyoqXG4gICAqIExpc3Qgb2YgYXNzb2NpYXRlZCByZWZ1bmRzLlxuICAgKiBAdHlwZSB7QXJyYXk8c3RyaW5nPn1cbiAgICogQG1lbWJlcm9mIExpc3RQYXltZW50SW50ZW50c1Jlc3BvbnNlRGF0YUlubmVyXG4gICAqL1xuICByZWZ1bmRJZHM/OiBBcnJheTxzdHJpbmc+O1xuICAvKipcbiAgICogU3RhdGUgbWFuYWdlbWVudCB0aW1lbGluZS5cbiAgICogQHR5cGUge0FycmF5PFRpbWVsaW5lPn1cbiAgICogQG1lbWJlcm9mIExpc3RQYXltZW50SW50ZW50c1Jlc3BvbnNlRGF0YUlubmVyXG4gICAqL1xuICB0aW1lbGluZT86IEFycmF5PFRpbWVsaW5lPjtcbiAgLyoqXG4gICAqIElTTy04NjAxIFVUQyBkYXRlL3RpbWUgZm9ybWF0LlxuICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgKiBAbWVtYmVyb2YgTGlzdFBheW1lbnRJbnRlbnRzUmVzcG9uc2VEYXRhSW5uZXJcbiAgICovXG4gIGV4cGlyZXNPbj86IHN0cmluZztcbiAgLyoqXG4gICAqIElTTy04NjAxIFVUQyBkYXRlL3RpbWUgZm9ybWF0LlxuICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgKiBAbWVtYmVyb2YgTGlzdFBheW1lbnRJbnRlbnRzUmVzcG9uc2VEYXRhSW5uZXJcbiAgICovXG4gIHVwZGF0ZURhdGU/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBJU08tODYwMSBVVEMgZGF0ZS90aW1lIGZvcm1hdC5cbiAgICogQHR5cGUge3N0cmluZ31cbiAgICogQG1lbWJlcm9mIExpc3RQYXltZW50SW50ZW50c1Jlc3BvbnNlRGF0YUlubmVyXG4gICAqL1xuICBjcmVhdGVEYXRlPzogc3RyaW5nO1xuICAvKipcbiAgICogVW5pcXVlIHN5c3RlbSBnZW5lcmF0ZWQgaWRlbnRpZmllciBmb3IgdGhlIHdhbGxldCBvZiB0aGUgbWVyY2hhbnQuXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqIEBtZW1iZXJvZiBMaXN0UGF5bWVudEludGVudHNSZXNwb25zZURhdGFJbm5lclxuICAgKi9cbiAgbWVyY2hhbnRXYWxsZXRJZD86IHN0cmluZztcbiAgLyoqXG4gICAqIERlc2lyZWQgY3VycmVuY3kgb2YgdGhlIHBheW1lbnQuXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqIEBtZW1iZXJvZiBMaXN0UGF5bWVudEludGVudHNSZXNwb25zZURhdGFJbm5lclxuICAgKi9cbiAgY3VycmVuY3k6IExpc3RQYXltZW50SW50ZW50c1Jlc3BvbnNlRGF0YUlubmVyQ3VycmVuY3lFbnVtO1xuICAvKipcbiAgICpcbiAgICogQHR5cGUge3N0cmluZ31cbiAgICogQG1lbWJlcm9mIExpc3RQYXltZW50SW50ZW50c1Jlc3BvbnNlRGF0YUlubmVyXG4gICAqL1xuICB0eXBlOiBMaXN0UGF5bWVudEludGVudHNSZXNwb25zZURhdGFJbm5lclR5cGVFbnVtO1xufVxuXG5leHBvcnQgY29uc3QgTGlzdFBheW1lbnRJbnRlbnRzUmVzcG9uc2VEYXRhSW5uZXJTZXR0bGVtZW50Q3VycmVuY3lFbnVtID0ge1xuICBVc2Q6IFwiVVNEXCIsXG4gIEJ0YzogXCJCVENcIixcbiAgRXRoOiBcIkVUSFwiXG59IGFzIGNvbnN0O1xuXG5leHBvcnQgdHlwZSBMaXN0UGF5bWVudEludGVudHNSZXNwb25zZURhdGFJbm5lclNldHRsZW1lbnRDdXJyZW5jeUVudW0gPVxuICB0eXBlb2YgTGlzdFBheW1lbnRJbnRlbnRzUmVzcG9uc2VEYXRhSW5uZXJTZXR0bGVtZW50Q3VycmVuY3lFbnVtW2tleW9mIHR5cGVvZiBMaXN0UGF5bWVudEludGVudHNSZXNwb25zZURhdGFJbm5lclNldHRsZW1lbnRDdXJyZW5jeUVudW1dO1xuZXhwb3J0IGNvbnN0IExpc3RQYXltZW50SW50ZW50c1Jlc3BvbnNlRGF0YUlubmVyQ3VycmVuY3lFbnVtID0ge1xuICBVc2Q6IFwiVVNEXCIsXG4gIEJ0YzogXCJCVENcIixcbiAgRXRoOiBcIkVUSFwiXG59IGFzIGNvbnN0O1xuXG5leHBvcnQgdHlwZSBMaXN0UGF5bWVudEludGVudHNSZXNwb25zZURhdGFJbm5lckN1cnJlbmN5RW51bSA9XG4gIHR5cGVvZiBMaXN0UGF5bWVudEludGVudHNSZXNwb25zZURhdGFJbm5lckN1cnJlbmN5RW51bVtrZXlvZiB0eXBlb2YgTGlzdFBheW1lbnRJbnRlbnRzUmVzcG9uc2VEYXRhSW5uZXJDdXJyZW5jeUVudW1dO1xuZXhwb3J0IGNvbnN0IExpc3RQYXltZW50SW50ZW50c1Jlc3BvbnNlRGF0YUlubmVyVHlwZUVudW0gPSB7XG4gIENvbnRpbnVvdXM6IFwiY29udGludW91c1wiXG59IGFzIGNvbnN0O1xuXG5leHBvcnQgdHlwZSBMaXN0UGF5bWVudEludGVudHNSZXNwb25zZURhdGFJbm5lclR5cGVFbnVtID1cbiAgdHlwZW9mIExpc3RQYXltZW50SW50ZW50c1Jlc3BvbnNlRGF0YUlubmVyVHlwZUVudW1ba2V5b2YgdHlwZW9mIExpc3RQYXltZW50SW50ZW50c1Jlc3BvbnNlRGF0YUlubmVyVHlwZUVudW1dO1xuIl19
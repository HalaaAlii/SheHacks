"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FiatPaymentPolymorphicDescriptionEnum = exports.FiatPaymentPolymorphicTypeEnum = void 0;
exports.FiatPaymentPolymorphicTypeEnum = {
    Payment: "payment",
    Refund: "refund",
    Cancel: "cancel"
};
exports.FiatPaymentPolymorphicDescriptionEnum = {
    Payment: "Payment"
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlhdC1wYXltZW50LXBvbHltb3JwaGljLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2dlbmVyYXRlZC9tb2RlbHMvZmlhdC1wYXltZW50LXBvbHltb3JwaGljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxvQkFBb0I7QUFDcEIsb0JBQW9CO0FBQ3BCOzs7O0dBSUc7OztBQXlMVSxRQUFBLDhCQUE4QixHQUFHO0lBQzVDLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE1BQU0sRUFBRSxRQUFRO0NBQ1IsQ0FBQztBQUlFLFFBQUEscUNBQXFDLEdBQUc7SUFDbkQsT0FBTyxFQUFFLFNBQVM7Q0FDVixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuXG4vLyBNYXkgY29udGFpbiB1bnVzZWQgaW1wb3J0cyBpbiBzb21lIGNhc2VzXG4vLyBAdHMtaWdub3JlXG5pbXBvcnQgeyBGaWF0Q2FuY2VsIH0gZnJvbSBcIi4vZmlhdC1jYW5jZWxcIjtcbi8vIE1heSBjb250YWluIHVudXNlZCBpbXBvcnRzIGluIHNvbWUgY2FzZXNcbi8vIEB0cy1pZ25vcmVcbmltcG9ydCB7IEZpYXRNb25leSB9IGZyb20gXCIuL2ZpYXQtbW9uZXlcIjtcbi8vIE1heSBjb250YWluIHVudXNlZCBpbXBvcnRzIGluIHNvbWUgY2FzZXNcbi8vIEB0cy1pZ25vcmVcbmltcG9ydCB7IEZpYXRNb25leVVzZCB9IGZyb20gXCIuL2ZpYXQtbW9uZXktdXNkXCI7XG4vLyBNYXkgY29udGFpbiB1bnVzZWQgaW1wb3J0cyBpbiBzb21lIGNhc2VzXG4vLyBAdHMtaWdub3JlXG5pbXBvcnQgeyBGaWF0UGF5bWVudCB9IGZyb20gXCIuL2ZpYXQtcGF5bWVudFwiO1xuLy8gTWF5IGNvbnRhaW4gdW51c2VkIGltcG9ydHMgaW4gc29tZSBjYXNlc1xuLy8gQHRzLWlnbm9yZVxuaW1wb3J0IHsgRmlhdFJlZnVuZCB9IGZyb20gXCIuL2ZpYXQtcmVmdW5kXCI7XG4vLyBNYXkgY29udGFpbiB1bnVzZWQgaW1wb3J0cyBpbiBzb21lIGNhc2VzXG4vLyBAdHMtaWdub3JlXG5pbXBvcnQgeyBNZXRhZGF0YVBob25lRW1haWwgfSBmcm9tIFwiLi9tZXRhZGF0YS1waG9uZS1lbWFpbFwiO1xuLy8gTWF5IGNvbnRhaW4gdW51c2VkIGltcG9ydHMgaW4gc29tZSBjYXNlc1xuLy8gQHRzLWlnbm9yZVxuaW1wb3J0IHsgUGF5bWVudEVycm9yQ29kZSB9IGZyb20gXCIuL3BheW1lbnQtZXJyb3ItY29kZVwiO1xuLy8gTWF5IGNvbnRhaW4gdW51c2VkIGltcG9ydHMgaW4gc29tZSBjYXNlc1xuLy8gQHRzLWlnbm9yZVxuaW1wb3J0IHsgUGF5bWVudFN0YXR1cyB9IGZyb20gXCIuL3BheW1lbnQtc3RhdHVzXCI7XG4vLyBNYXkgY29udGFpbiB1bnVzZWQgaW1wb3J0cyBpbiBzb21lIGNhc2VzXG4vLyBAdHMtaWdub3JlXG5pbXBvcnQgeyBQYXltZW50VmVyaWZpY2F0aW9uUmVzcG9uc2UgfSBmcm9tIFwiLi9wYXltZW50LXZlcmlmaWNhdGlvbi1yZXNwb25zZVwiO1xuLy8gTWF5IGNvbnRhaW4gdW51c2VkIGltcG9ydHMgaW4gc29tZSBjYXNlc1xuLy8gQHRzLWlnbm9yZVxuaW1wb3J0IHsgUmVxdWlyZWRBY3Rpb24gfSBmcm9tIFwiLi9yZXF1aXJlZC1hY3Rpb25cIjtcbi8vIE1heSBjb250YWluIHVudXNlZCBpbXBvcnRzIGluIHNvbWUgY2FzZXNcbi8vIEB0cy1pZ25vcmVcbmltcG9ydCB7IFJpc2tFdmFsdWF0aW9uIH0gZnJvbSBcIi4vcmlzay1ldmFsdWF0aW9uXCI7XG4vLyBNYXkgY29udGFpbiB1bnVzZWQgaW1wb3J0cyBpbiBzb21lIGNhc2VzXG4vLyBAdHMtaWdub3JlXG5pbXBvcnQgeyBTb3VyY2VSZXNwb25zZSB9IGZyb20gXCIuL3NvdXJjZS1yZXNwb25zZVwiO1xuXG4vKipcbiAqXG4gKiBAZXhwb3J0XG4gKiBAaW50ZXJmYWNlIEZpYXRQYXltZW50UG9seW1vcnBoaWNcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBGaWF0UGF5bWVudFBvbHltb3JwaGljIHtcbiAgLyoqXG4gICAqIFVuaXF1ZSBzeXN0ZW0gZ2VuZXJhdGVkIGlkZW50aWZpZXIgZm9yIHRoZSBlbnRpdHkuXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqIEBtZW1iZXJvZiBGaWF0UGF5bWVudFBvbHltb3JwaGljXG4gICAqL1xuICBpZDogc3RyaW5nO1xuICAvKipcbiAgICogVHlwZSBvZiB0aGUgcGF5bWVudCBvYmplY3QuXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqIEBtZW1iZXJvZiBGaWF0UGF5bWVudFBvbHltb3JwaGljXG4gICAqL1xuICB0eXBlOiBGaWF0UGF5bWVudFBvbHltb3JwaGljVHlwZUVudW07XG4gIC8qKlxuICAgKiBVbmlxdWUgc3lzdGVtIGdlbmVyYXRlZCBpZGVudGlmaWVyIGZvciB0aGUgbWVyY2hhbnQuXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqIEBtZW1iZXJvZiBGaWF0UGF5bWVudFBvbHltb3JwaGljXG4gICAqL1xuICBtZXJjaGFudElkOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBVbmlxdWUgc3lzdGVtIGdlbmVyYXRlZCBpZGVudGlmaWVyIGZvciB0aGUgd2FsbGV0IG9mIHRoZSBtZXJjaGFudC5cbiAgICogQHR5cGUge3N0cmluZ31cbiAgICogQG1lbWJlcm9mIEZpYXRQYXltZW50UG9seW1vcnBoaWNcbiAgICovXG4gIG1lcmNoYW50V2FsbGV0SWQ/OiBzdHJpbmc7XG4gIC8qKlxuICAgKlxuICAgKiBAdHlwZSB7RmlhdE1vbmV5VXNkfVxuICAgKiBAbWVtYmVyb2YgRmlhdFBheW1lbnRQb2x5bW9ycGhpY1xuICAgKi9cbiAgYW1vdW50OiBGaWF0TW9uZXlVc2Q7XG4gIC8qKlxuICAgKlxuICAgKiBAdHlwZSB7RmlhdE1vbmV5fVxuICAgKiBAbWVtYmVyb2YgRmlhdFBheW1lbnRQb2x5bW9ycGhpY1xuICAgKi9cbiAgZnJvbUFtb3VudD86IEZpYXRNb25leTtcbiAgLyoqXG4gICAqXG4gICAqIEB0eXBlIHtTb3VyY2VSZXNwb25zZX1cbiAgICogQG1lbWJlcm9mIEZpYXRQYXltZW50UG9seW1vcnBoaWNcbiAgICovXG4gIHNvdXJjZTogU291cmNlUmVzcG9uc2U7XG4gIC8qKlxuICAgKiBFbnVtZXJhdGVkIGRlc2NyaXB0aW9uIG9mIHRoZSBwYXltZW50LlxuICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgKiBAbWVtYmVyb2YgRmlhdFBheW1lbnRQb2x5bW9ycGhpY1xuICAgKi9cbiAgZGVzY3JpcHRpb24/OiBGaWF0UGF5bWVudFBvbHltb3JwaGljRGVzY3JpcHRpb25FbnVtO1xuICAvKipcbiAgICpcbiAgICogQHR5cGUge1BheW1lbnRTdGF0dXN9XG4gICAqIEBtZW1iZXJvZiBGaWF0UGF5bWVudFBvbHltb3JwaGljXG4gICAqL1xuICBzdGF0dXM6IFBheW1lbnRTdGF0dXM7XG4gIC8qKlxuICAgKlxuICAgKiBAdHlwZSB7UmVxdWlyZWRBY3Rpb259XG4gICAqIEBtZW1iZXJvZiBGaWF0UGF5bWVudFBvbHltb3JwaGljXG4gICAqL1xuICByZXF1aXJlZEFjdGlvbj86IFJlcXVpcmVkQWN0aW9uO1xuICAvKipcbiAgICpcbiAgICogQHR5cGUge1BheW1lbnRWZXJpZmljYXRpb25SZXNwb25zZX1cbiAgICogQG1lbWJlcm9mIEZpYXRQYXltZW50UG9seW1vcnBoaWNcbiAgICovXG4gIHZlcmlmaWNhdGlvbj86IFBheW1lbnRWZXJpZmljYXRpb25SZXNwb25zZTtcbiAgLyoqXG4gICAqXG4gICAqIEB0eXBlIHtGaWF0UGF5bWVudH1cbiAgICogQG1lbWJlcm9mIEZpYXRQYXltZW50UG9seW1vcnBoaWNcbiAgICovXG4gIG9yaWdpbmFsUGF5bWVudD86IEZpYXRQYXltZW50O1xuICAvKipcbiAgICpcbiAgICogQHR5cGUge0ZpYXRDYW5jZWx9XG4gICAqIEBtZW1iZXJvZiBGaWF0UGF5bWVudFBvbHltb3JwaGljXG4gICAqL1xuICBjYW5jZWw/OiBGaWF0Q2FuY2VsIHwgbnVsbDtcbiAgLyoqXG4gICAqXG4gICAqIEB0eXBlIHtBcnJheTxGaWF0UmVmdW5kPn1cbiAgICogQG1lbWJlcm9mIEZpYXRQYXltZW50UG9seW1vcnBoaWNcbiAgICovXG4gIHJlZnVuZHM/OiBBcnJheTxGaWF0UmVmdW5kPiB8IG51bGw7XG4gIC8qKlxuICAgKlxuICAgKiBAdHlwZSB7RmlhdE1vbmV5VXNkfVxuICAgKiBAbWVtYmVyb2YgRmlhdFBheW1lbnRQb2x5bW9ycGhpY1xuICAgKi9cbiAgZmVlcz86IEZpYXRNb25leVVzZDtcbiAgLyoqXG4gICAqIFBheW1lbnQgdHJhY2tpbmcgcmVmZXJlbmNlLiBXaWxsIGJlIHByZXNlbnQgb25jZSBrbm93bi5cbiAgICogQHR5cGUge3N0cmluZ31cbiAgICogQG1lbWJlcm9mIEZpYXRQYXltZW50UG9seW1vcnBoaWNcbiAgICovXG4gIHRyYWNraW5nUmVmPzogc3RyaW5nIHwgbnVsbDtcbiAgLyoqXG4gICAqIEV4dGVybmFsIG5ldHdvcmsgaWRlbnRpZmllciB3aGljaCB3aWxsIGJlIHByZXNlbnQgb25jZSBwcm92aWRlZCBmcm9tIHRoZSBhcHBsaWNhYmxlIG5ldHdvcmsuICAgRXhhbXBsZXM6ICogKipJbnB1dC9PdXRwdXQgTWVzc2FnZSBBY2NvdW50YWJpbGl0eSBEYXRhIChJTUFEL09NQUQpKio6IHVuaXF1ZSBudW1iZXIgZ2l2ZW4gdG8gZWFjaCBGZWRXaXJlIHBheW1lbnQgd2hlbiB1c2luZyB0aGUgRmVkZXJhbCBSZXNlcnZlIEJhbmsgU2VydmljZSB3aGljaCBjYW4gYmUgdXNlZCB0byBpbnZlc3RpZ2F0ZSBhbmQgdHJhY2sgd2lyZSB0cmFuc2ZlcnMuXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqIEBtZW1iZXJvZiBGaWF0UGF5bWVudFBvbHltb3JwaGljXG4gICAqL1xuICBleHRlcm5hbFJlZj86IHN0cmluZztcbiAgLyoqXG4gICAqXG4gICAqIEB0eXBlIHtQYXltZW50RXJyb3JDb2RlfVxuICAgKiBAbWVtYmVyb2YgRmlhdFBheW1lbnRQb2x5bW9ycGhpY1xuICAgKi9cbiAgZXJyb3JDb2RlPzogUGF5bWVudEVycm9yQ29kZSB8IG51bGw7XG4gIC8qKlxuICAgKlxuICAgKiBAdHlwZSB7TWV0YWRhdGFQaG9uZUVtYWlsfVxuICAgKiBAbWVtYmVyb2YgRmlhdFBheW1lbnRQb2x5bW9ycGhpY1xuICAgKi9cbiAgbWV0YWRhdGE/OiBNZXRhZGF0YVBob25lRW1haWw7XG4gIC8qKlxuICAgKiBUaGUgY2hhbm5lbCBpZGVudGlmaWVyIHRoYXQgY2FuIGJlIHNldCBmb3IgdGhlIHBheW1lbnQuIFdoZW4gbm90IHByb3ZpZGVkLCB0aGUgZGVmYXVsdCBjaGFubmVsIGlzIHVzZWQuXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqIEBtZW1iZXJvZiBGaWF0UGF5bWVudFBvbHltb3JwaGljXG4gICAqL1xuICBjaGFubmVsPzogc3RyaW5nO1xuICAvKipcbiAgICpcbiAgICogQHR5cGUge1Jpc2tFdmFsdWF0aW9ufVxuICAgKiBAbWVtYmVyb2YgRmlhdFBheW1lbnRQb2x5bW9ycGhpY1xuICAgKi9cbiAgcmlza0V2YWx1YXRpb24/OiBSaXNrRXZhbHVhdGlvbiB8IG51bGw7XG4gIC8qKlxuICAgKiBJU08tODYwMSBVVEMgZGF0ZS90aW1lIGZvcm1hdC5cbiAgICogQHR5cGUge3N0cmluZ31cbiAgICogQG1lbWJlcm9mIEZpYXRQYXltZW50UG9seW1vcnBoaWNcbiAgICovXG4gIGNyZWF0ZURhdGU/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBJU08tODYwMSBVVEMgZGF0ZS90aW1lIGZvcm1hdC5cbiAgICogQHR5cGUge3N0cmluZ31cbiAgICogQG1lbWJlcm9mIEZpYXRQYXltZW50UG9seW1vcnBoaWNcbiAgICovXG4gIHVwZGF0ZURhdGU/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjb25zdCBGaWF0UGF5bWVudFBvbHltb3JwaGljVHlwZUVudW0gPSB7XG4gIFBheW1lbnQ6IFwicGF5bWVudFwiLFxuICBSZWZ1bmQ6IFwicmVmdW5kXCIsXG4gIENhbmNlbDogXCJjYW5jZWxcIlxufSBhcyBjb25zdDtcblxuZXhwb3J0IHR5cGUgRmlhdFBheW1lbnRQb2x5bW9ycGhpY1R5cGVFbnVtID1cbiAgdHlwZW9mIEZpYXRQYXltZW50UG9seW1vcnBoaWNUeXBlRW51bVtrZXlvZiB0eXBlb2YgRmlhdFBheW1lbnRQb2x5bW9ycGhpY1R5cGVFbnVtXTtcbmV4cG9ydCBjb25zdCBGaWF0UGF5bWVudFBvbHltb3JwaGljRGVzY3JpcHRpb25FbnVtID0ge1xuICBQYXltZW50OiBcIlBheW1lbnRcIlxufSBhcyBjb25zdDtcblxuZXhwb3J0IHR5cGUgRmlhdFBheW1lbnRQb2x5bW9ycGhpY0Rlc2NyaXB0aW9uRW51bSA9XG4gIHR5cGVvZiBGaWF0UGF5bWVudFBvbHltb3JwaGljRGVzY3JpcHRpb25FbnVtW2tleW9mIHR5cGVvZiBGaWF0UGF5bWVudFBvbHltb3JwaGljRGVzY3JpcHRpb25FbnVtXTtcbiJdfQ==
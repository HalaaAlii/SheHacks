"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SimpleCardFundingTypeEnum = exports.SimpleCardNetworkEnum = void 0;
exports.SimpleCardNetworkEnum = {
    Visa: "VISA",
    Mastercard: "MASTERCARD",
    Amex: "AMEX",
    Unknown: "UNKNOWN"
};
exports.SimpleCardFundingTypeEnum = {
    Credit: "credit",
    Debit: "debit",
    Prepaid: "prepaid",
    Unknown: "unknown"
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2ltcGxlLWNhcmQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZ2VuZXJhdGVkL21vZGVscy9zaW1wbGUtY2FyZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsb0JBQW9CO0FBQ3BCLG9CQUFvQjtBQUNwQjs7OztHQUlHOzs7QUEyR1UsUUFBQSxxQkFBcUIsR0FBRztJQUNuQyxJQUFJLEVBQUUsTUFBTTtJQUNaLFVBQVUsRUFBRSxZQUFZO0lBQ3hCLElBQUksRUFBRSxNQUFNO0lBQ1osT0FBTyxFQUFFLFNBQVM7Q0FDVixDQUFDO0FBSUUsUUFBQSx5QkFBeUIsR0FBRztJQUN2QyxNQUFNLEVBQUUsUUFBUTtJQUNoQixLQUFLLEVBQUUsT0FBTztJQUNkLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLE9BQU8sRUFBRSxTQUFTO0NBQ1YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cblxuLy8gTWF5IGNvbnRhaW4gdW51c2VkIGltcG9ydHMgaW4gc29tZSBjYXNlc1xuLy8gQHRzLWlnbm9yZVxuaW1wb3J0IHsgQ2FyZFZlcmlmaWNhdGlvblJlc3BvbnNlIH0gZnJvbSBcIi4vY2FyZC12ZXJpZmljYXRpb24tcmVzcG9uc2VcIjtcbi8vIE1heSBjb250YWluIHVudXNlZCBpbXBvcnRzIGluIHNvbWUgY2FzZXNcbi8vIEB0cy1pZ25vcmVcbmltcG9ydCB7IEV4dGVybmFsRmlhdEFjY291bnRTdGF0dXMgfSBmcm9tIFwiLi9leHRlcm5hbC1maWF0LWFjY291bnQtc3RhdHVzXCI7XG4vLyBNYXkgY29udGFpbiB1bnVzZWQgaW1wb3J0cyBpbiBzb21lIGNhc2VzXG4vLyBAdHMtaWdub3JlXG5pbXBvcnQgeyBSaXNrRXZhbHVhdGlvbiB9IGZyb20gXCIuL3Jpc2stZXZhbHVhdGlvblwiO1xuLy8gTWF5IGNvbnRhaW4gdW51c2VkIGltcG9ydHMgaW4gc29tZSBjYXNlc1xuLy8gQHRzLWlnbm9yZVxuaW1wb3J0IHsgU2ltcGxlQmlsbGluZ0RldGFpbHMgfSBmcm9tIFwiLi9zaW1wbGUtYmlsbGluZy1kZXRhaWxzXCI7XG5cbi8qKlxuICpcbiAqIEBleHBvcnRcbiAqIEBpbnRlcmZhY2UgU2ltcGxlQ2FyZFxuICovXG5leHBvcnQgaW50ZXJmYWNlIFNpbXBsZUNhcmQge1xuICAvKipcbiAgICogVW5pcXVlIHN5c3RlbSBnZW5lcmF0ZWQgaWRlbnRpZmllciBmb3IgdGhlIGVudGl0eS5cbiAgICogQHR5cGUge3N0cmluZ31cbiAgICogQG1lbWJlcm9mIFNpbXBsZUNhcmRcbiAgICovXG4gIGlkOiBzdHJpbmc7XG4gIC8qKlxuICAgKlxuICAgKiBAdHlwZSB7RXh0ZXJuYWxGaWF0QWNjb3VudFN0YXR1c31cbiAgICogQG1lbWJlcm9mIFNpbXBsZUNhcmRcbiAgICovXG4gIHN0YXR1czogRXh0ZXJuYWxGaWF0QWNjb3VudFN0YXR1cztcbiAgLyoqXG4gICAqXG4gICAqIEB0eXBlIHtTaW1wbGVCaWxsaW5nRGV0YWlsc31cbiAgICogQG1lbWJlcm9mIFNpbXBsZUNhcmRcbiAgICovXG4gIGJpbGxpbmdEZXRhaWxzOiBTaW1wbGVCaWxsaW5nRGV0YWlscztcbiAgLyoqXG4gICAqIFR3byBkaWdpdCBudW1iZXIgcmVwcmVzZW50aW5nIHRoZSBjYXJkXFwncyBleHBpcmF0aW9uIG1vbnRoLlxuICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgKiBAbWVtYmVyb2YgU2ltcGxlQ2FyZFxuICAgKi9cbiAgZXhwTW9udGg6IG51bWJlcjtcbiAgLyoqXG4gICAqIEZvdXIgZGlnaXQgbnVtYmVyIHJlcHJlc2VudGluZyB0aGUgY2FyZFxcJ3MgZXhwaXJhdGlvbiB5ZWFyLlxuICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgKiBAbWVtYmVyb2YgU2ltcGxlQ2FyZFxuICAgKi9cbiAgZXhwWWVhcjogbnVtYmVyO1xuICAvKipcbiAgICogVGhlIG5ldHdvcmsgb2YgdGhlIGNhcmQuXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqIEBtZW1iZXJvZiBTaW1wbGVDYXJkXG4gICAqL1xuICBuZXR3b3JrOiBTaW1wbGVDYXJkTmV0d29ya0VudW07XG4gIC8qKlxuICAgKiBUaGUgYmFuayBpZGVudGlmaWNhdGlvbiBudW1iZXIgKEJJTiksIHRoZSBmaXJzdCA2IGRpZ2l0cyBvZiB0aGUgY2FyZC5cbiAgICogQHR5cGUge3N0cmluZ31cbiAgICogQG1lbWJlcm9mIFNpbXBsZUNhcmRcbiAgICovXG4gIGJpbj86IHN0cmluZztcbiAgLyoqXG4gICAqIFRoZSBjb3VudHJ5IGNvZGUgb2YgdGhlIGlzc3VlciBiYW5rLiBGb2xsb3dzIHRoZSBJU08gMzE2Ni0xIGFscGhhLTIgc3RhbmRhcmQuXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqIEBtZW1iZXJvZiBTaW1wbGVDYXJkXG4gICAqL1xuICBpc3N1ZXJDb3VudHJ5Pzogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIGZ1bmRpbmcgdHlwZSBvZiB0aGUgY2FyZC4gUG9zc2libGUgdmFsdWVzIGFyZSBgY3JlZGl0YCwgYGRlYml0YCwgYHByZXBhaWRgLCBhbmQgYHVua25vd25gLlxuICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgKiBAbWVtYmVyb2YgU2ltcGxlQ2FyZFxuICAgKi9cbiAgZnVuZGluZ1R5cGU/OiBTaW1wbGVDYXJkRnVuZGluZ1R5cGVFbnVtO1xuICAvKipcbiAgICogQSBVVUlEIHRoYXQgdW5pcXVlbHkgaWRlbnRpZmllcyB0aGUgYWNjb3VudCBudW1iZXIuIElmIHRoZSBzYW1lIGFjY291bnQgaXMgdXNlZCBtb3JlIHRoYW4gb25jZSwgZWFjaCBjYXJkIG9iamVjdCB3aWxsIGhhdmUgYSBkaWZmZXJlbnQgaWQsIGJ1dCB0aGUgZmluZ2VycHJpbnQgd2lsbCBzdGF5IHRoZSBzYW1lLlxuICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgKiBAbWVtYmVyb2YgU2ltcGxlQ2FyZFxuICAgKi9cbiAgZmluZ2VycHJpbnQ6IHN0cmluZztcbiAgLyoqXG4gICAqXG4gICAqIEB0eXBlIHtDYXJkVmVyaWZpY2F0aW9uUmVzcG9uc2V9XG4gICAqIEBtZW1iZXJvZiBTaW1wbGVDYXJkXG4gICAqL1xuICB2ZXJpZmljYXRpb246IENhcmRWZXJpZmljYXRpb25SZXNwb25zZTtcbiAgLyoqXG4gICAqXG4gICAqIEB0eXBlIHtSaXNrRXZhbHVhdGlvbn1cbiAgICogQG1lbWJlcm9mIFNpbXBsZUNhcmRcbiAgICovXG4gIHJpc2tFdmFsdWF0aW9uPzogUmlza0V2YWx1YXRpb24gfCBudWxsO1xuICAvKipcbiAgICogSVNPLTg2MDEgVVRDIGRhdGUvdGltZSBmb3JtYXQuXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqIEBtZW1iZXJvZiBTaW1wbGVDYXJkXG4gICAqL1xuICBjcmVhdGVEYXRlOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBJU08tODYwMSBVVEMgZGF0ZS90aW1lIGZvcm1hdC5cbiAgICogQHR5cGUge3N0cmluZ31cbiAgICogQG1lbWJlcm9mIFNpbXBsZUNhcmRcbiAgICovXG4gIHVwZGF0ZURhdGU6IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0IFNpbXBsZUNhcmROZXR3b3JrRW51bSA9IHtcbiAgVmlzYTogXCJWSVNBXCIsXG4gIE1hc3RlcmNhcmQ6IFwiTUFTVEVSQ0FSRFwiLFxuICBBbWV4OiBcIkFNRVhcIixcbiAgVW5rbm93bjogXCJVTktOT1dOXCJcbn0gYXMgY29uc3Q7XG5cbmV4cG9ydCB0eXBlIFNpbXBsZUNhcmROZXR3b3JrRW51bSA9XG4gIHR5cGVvZiBTaW1wbGVDYXJkTmV0d29ya0VudW1ba2V5b2YgdHlwZW9mIFNpbXBsZUNhcmROZXR3b3JrRW51bV07XG5leHBvcnQgY29uc3QgU2ltcGxlQ2FyZEZ1bmRpbmdUeXBlRW51bSA9IHtcbiAgQ3JlZGl0OiBcImNyZWRpdFwiLFxuICBEZWJpdDogXCJkZWJpdFwiLFxuICBQcmVwYWlkOiBcInByZXBhaWRcIixcbiAgVW5rbm93bjogXCJ1bmtub3duXCJcbn0gYXMgY29uc3Q7XG5cbmV4cG9ydCB0eXBlIFNpbXBsZUNhcmRGdW5kaW5nVHlwZUVudW0gPVxuICB0eXBlb2YgU2ltcGxlQ2FyZEZ1bmRpbmdUeXBlRW51bVtrZXlvZiB0eXBlb2YgU2ltcGxlQ2FyZEZ1bmRpbmdUeXBlRW51bV07XG4iXX0=
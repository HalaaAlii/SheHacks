"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DetailedCancelDescriptionEnum = exports.DetailedCancelTypeEnum = void 0;
exports.DetailedCancelTypeEnum = {
    Cancel: "cancel"
};
exports.DetailedCancelDescriptionEnum = {
    Payment: "Payment"
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV0YWlsZWQtY2FuY2VsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2dlbmVyYXRlZC9tb2RlbHMvZGV0YWlsZWQtY2FuY2VsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxvQkFBb0I7QUFDcEIsb0JBQW9CO0FBQ3BCOzs7O0dBSUc7OztBQXNJVSxRQUFBLHNCQUFzQixHQUFHO0lBQ3BDLE1BQU0sRUFBRSxRQUFRO0NBQ1IsQ0FBQztBQUlFLFFBQUEsNkJBQTZCLEdBQUc7SUFDM0MsT0FBTyxFQUFFLFNBQVM7Q0FDVixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuXG4vLyBNYXkgY29udGFpbiB1bnVzZWQgaW1wb3J0cyBpbiBzb21lIGNhc2VzXG4vLyBAdHMtaWdub3JlXG5pbXBvcnQgeyBDYW5jZWxSZWZ1bmRSZXZlcnNhbFN0YXR1cyB9IGZyb20gXCIuL2NhbmNlbC1yZWZ1bmQtcmV2ZXJzYWwtc3RhdHVzXCI7XG4vLyBNYXkgY29udGFpbiB1bnVzZWQgaW1wb3J0cyBpbiBzb21lIGNhc2VzXG4vLyBAdHMtaWdub3JlXG5pbXBvcnQgeyBGaWF0TW9uZXlVc2QgfSBmcm9tIFwiLi9maWF0LW1vbmV5LXVzZFwiO1xuLy8gTWF5IGNvbnRhaW4gdW51c2VkIGltcG9ydHMgaW4gc29tZSBjYXNlc1xuLy8gQHRzLWlnbm9yZVxuaW1wb3J0IHsgRmlhdFBheW1lbnQgfSBmcm9tIFwiLi9maWF0LXBheW1lbnRcIjtcbi8vIE1heSBjb250YWluIHVudXNlZCBpbXBvcnRzIGluIHNvbWUgY2FzZXNcbi8vIEB0cy1pZ25vcmVcbmltcG9ydCB7IE1ldGFkYXRhUGhvbmVFbWFpbCB9IGZyb20gXCIuL21ldGFkYXRhLXBob25lLWVtYWlsXCI7XG4vLyBNYXkgY29udGFpbiB1bnVzZWQgaW1wb3J0cyBpbiBzb21lIGNhc2VzXG4vLyBAdHMtaWdub3JlXG5pbXBvcnQgeyBQYXltZW50RXJyb3JDb2RlIH0gZnJvbSBcIi4vcGF5bWVudC1lcnJvci1jb2RlXCI7XG4vLyBNYXkgY29udGFpbiB1bnVzZWQgaW1wb3J0cyBpbiBzb21lIGNhc2VzXG4vLyBAdHMtaWdub3JlXG5pbXBvcnQgeyBSaXNrRXZhbHVhdGlvbiB9IGZyb20gXCIuL3Jpc2stZXZhbHVhdGlvblwiO1xuLy8gTWF5IGNvbnRhaW4gdW51c2VkIGltcG9ydHMgaW4gc29tZSBjYXNlc1xuLy8gQHRzLWlnbm9yZVxuaW1wb3J0IHsgU291cmNlUmVzcG9uc2UgfSBmcm9tIFwiLi9zb3VyY2UtcmVzcG9uc2VcIjtcblxuLyoqXG4gKlxuICogQGV4cG9ydFxuICogQGludGVyZmFjZSBEZXRhaWxlZENhbmNlbFxuICovXG5leHBvcnQgaW50ZXJmYWNlIERldGFpbGVkQ2FuY2VsIHtcbiAgLyoqXG4gICAqIFVuaXF1ZSBzeXN0ZW0gZ2VuZXJhdGVkIGlkZW50aWZpZXIgZm9yIHRoZSBlbnRpdHkuXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqIEBtZW1iZXJvZiBEZXRhaWxlZENhbmNlbFxuICAgKi9cbiAgaWQ6IHN0cmluZztcbiAgLyoqXG4gICAqIFR5cGUgb2YgdGhlIHBheW1lbnQgb2JqZWN0LlxuICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgKiBAbWVtYmVyb2YgRGV0YWlsZWRDYW5jZWxcbiAgICovXG4gIHR5cGU6IERldGFpbGVkQ2FuY2VsVHlwZUVudW07XG4gIC8qKlxuICAgKiBVbmlxdWUgc3lzdGVtIGdlbmVyYXRlZCBpZGVudGlmaWVyIGZvciB0aGUgbWVyY2hhbnQuXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqIEBtZW1iZXJvZiBEZXRhaWxlZENhbmNlbFxuICAgKi9cbiAgbWVyY2hhbnRJZDogc3RyaW5nO1xuICAvKipcbiAgICogVW5pcXVlIHN5c3RlbSBnZW5lcmF0ZWQgaWRlbnRpZmllciBmb3IgdGhlIHdhbGxldCBvZiB0aGUgbWVyY2hhbnQuXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqIEBtZW1iZXJvZiBEZXRhaWxlZENhbmNlbFxuICAgKi9cbiAgbWVyY2hhbnRXYWxsZXRJZD86IHN0cmluZztcbiAgLyoqXG4gICAqXG4gICAqIEB0eXBlIHtGaWF0TW9uZXlVc2R9XG4gICAqIEBtZW1iZXJvZiBEZXRhaWxlZENhbmNlbFxuICAgKi9cbiAgYW1vdW50OiBGaWF0TW9uZXlVc2Q7XG4gIC8qKlxuICAgKlxuICAgKiBAdHlwZSB7U291cmNlUmVzcG9uc2V9XG4gICAqIEBtZW1iZXJvZiBEZXRhaWxlZENhbmNlbFxuICAgKi9cbiAgc291cmNlOiBTb3VyY2VSZXNwb25zZTtcbiAgLyoqXG4gICAqIEVudW1lcmF0ZWQgZGVzY3JpcHRpb24gb2YgdGhlIHBheW1lbnQuXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqIEBtZW1iZXJvZiBEZXRhaWxlZENhbmNlbFxuICAgKi9cbiAgZGVzY3JpcHRpb24/OiBEZXRhaWxlZENhbmNlbERlc2NyaXB0aW9uRW51bTtcbiAgLyoqXG4gICAqXG4gICAqIEB0eXBlIHtDYW5jZWxSZWZ1bmRSZXZlcnNhbFN0YXR1c31cbiAgICogQG1lbWJlcm9mIERldGFpbGVkQ2FuY2VsXG4gICAqL1xuICBzdGF0dXM6IENhbmNlbFJlZnVuZFJldmVyc2FsU3RhdHVzO1xuICAvKipcbiAgICpcbiAgICogQHR5cGUge0ZpYXRQYXltZW50fVxuICAgKiBAbWVtYmVyb2YgRGV0YWlsZWRDYW5jZWxcbiAgICovXG4gIG9yaWdpbmFsUGF5bWVudD86IEZpYXRQYXltZW50O1xuICAvKipcbiAgICpcbiAgICogQHR5cGUge0ZpYXRNb25leVVzZH1cbiAgICogQG1lbWJlcm9mIERldGFpbGVkQ2FuY2VsXG4gICAqL1xuICBmZWVzPzogRmlhdE1vbmV5VXNkO1xuICAvKipcbiAgICogUGF5bWVudCB0cmFja2luZyByZWZlcmVuY2UuIFdpbGwgYmUgcHJlc2VudCBvbmNlIGtub3duLlxuICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgKiBAbWVtYmVyb2YgRGV0YWlsZWRDYW5jZWxcbiAgICovXG4gIHRyYWNraW5nUmVmPzogc3RyaW5nIHwgbnVsbDtcbiAgLyoqXG4gICAqXG4gICAqIEB0eXBlIHtQYXltZW50RXJyb3JDb2RlfVxuICAgKiBAbWVtYmVyb2YgRGV0YWlsZWRDYW5jZWxcbiAgICovXG4gIGVycm9yQ29kZT86IFBheW1lbnRFcnJvckNvZGUgfCBudWxsO1xuICAvKipcbiAgICpcbiAgICogQHR5cGUge01ldGFkYXRhUGhvbmVFbWFpbH1cbiAgICogQG1lbWJlcm9mIERldGFpbGVkQ2FuY2VsXG4gICAqL1xuICBtZXRhZGF0YT86IE1ldGFkYXRhUGhvbmVFbWFpbDtcbiAgLyoqXG4gICAqXG4gICAqIEB0eXBlIHtSaXNrRXZhbHVhdGlvbn1cbiAgICogQG1lbWJlcm9mIERldGFpbGVkQ2FuY2VsXG4gICAqL1xuICByaXNrRXZhbHVhdGlvbj86IFJpc2tFdmFsdWF0aW9uIHwgbnVsbDtcbiAgLyoqXG4gICAqIElmIHRoZSBjYW5jZWwgd2FzIG1hZGUgYWZ0ZXIgYSBjdXRvZmYgdGltZSBwZXJpb2QsIGl0IHdpbGwgYmUgcHJvY2Vzc2VkIGFzIGEgcmVmdW5kLiBUaGlzIGZsYWcgaW5kaWNhdGVzIHRoYXQgdGhlIGNhbmNlbCB3YXMgcHJvY2Vzc2VkIGFzIGEgcmVmdW5kXFwnXG4gICAqIEB0eXBlIHtib29sZWFufVxuICAgKiBAbWVtYmVyb2YgRGV0YWlsZWRDYW5jZWxcbiAgICovXG4gIHJlZnVuZD86IGJvb2xlYW47XG4gIC8qKlxuICAgKiBJU08tODYwMSBVVEMgZGF0ZS90aW1lIGZvcm1hdC5cbiAgICogQHR5cGUge3N0cmluZ31cbiAgICogQG1lbWJlcm9mIERldGFpbGVkQ2FuY2VsXG4gICAqL1xuICBjcmVhdGVEYXRlPzogc3RyaW5nO1xuICAvKipcbiAgICogSVNPLTg2MDEgVVRDIGRhdGUvdGltZSBmb3JtYXQuXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqIEBtZW1iZXJvZiBEZXRhaWxlZENhbmNlbFxuICAgKi9cbiAgdXBkYXRlRGF0ZT86IHN0cmluZztcbn1cblxuZXhwb3J0IGNvbnN0IERldGFpbGVkQ2FuY2VsVHlwZUVudW0gPSB7XG4gIENhbmNlbDogXCJjYW5jZWxcIlxufSBhcyBjb25zdDtcblxuZXhwb3J0IHR5cGUgRGV0YWlsZWRDYW5jZWxUeXBlRW51bSA9XG4gIHR5cGVvZiBEZXRhaWxlZENhbmNlbFR5cGVFbnVtW2tleW9mIHR5cGVvZiBEZXRhaWxlZENhbmNlbFR5cGVFbnVtXTtcbmV4cG9ydCBjb25zdCBEZXRhaWxlZENhbmNlbERlc2NyaXB0aW9uRW51bSA9IHtcbiAgUGF5bWVudDogXCJQYXltZW50XCJcbn0gYXMgY29uc3Q7XG5cbmV4cG9ydCB0eXBlIERldGFpbGVkQ2FuY2VsRGVzY3JpcHRpb25FbnVtID1cbiAgdHlwZW9mIERldGFpbGVkQ2FuY2VsRGVzY3JpcHRpb25FbnVtW2tleW9mIHR5cGVvZiBEZXRhaWxlZENhbmNlbERlc2NyaXB0aW9uRW51bV07XG4iXX0=